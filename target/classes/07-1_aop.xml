<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 핵심관심모듈의 클래스를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill07.aop.HewonDAOImpl" id="hewonDAO"/>
	<bean class="xyz.itwill07.aop.HewonServiceImpl" id="hewonService">
		<property name="hewonDAO" ref="hewonDAO"/>
	</bean>
	
	<!-- config : Spring AOP 관련 설정을 제공하기 위한 엘리먼트 -->
	
	<aop:config>
	
		<!-- aspect : 핵심관심코드에 횡단관심코드를 원하는 위치(JoinPoint)에 삽입하여 실행되도록 설정하기 위한
		엘리먼트 -->
		<!-- => 횡단관심코드가 삽입될 위치를 하위 엘리먼트로 설정 -->
		<!-- => 하위 엘리먼트 : before, after, after-returning, after-throwing, around -->
		
		<aop:aspect ref="hewonAdvice">
			<!-- before : 타겟메소드의 명령(핵심관심코드) 실행 전 횡단관심코드로 삽입되어 실행되도록 설정하는 엘리먼 -->
			<!-- method 속성 : 횡단관심코드의 메소드 이름을 속성값으로 설정 - 자동완성 기능 사용 -->
			<!-- pointcut 속성 : 핵심관심모듈로 작성된 클래스의 Spring Bean의 메소드 중 횡단코드가 삽입될 메소드를
			지정하기 위한 PointCut 표현식을 속성값으로 설정 - 타겟메소드 지정 -->
			<!-- execution 명시자를 이용하여 타겟메소드를 지정하는 방법 -->
			<!-- => execution 명시자는 메소드의 머릿부를 표현하여 타겟메소드 지정 -->
			<!-- 형식) execution(접근제한자 ) 반환형[패키지, 클래스] 메소드명(자료형, 자료형 -->
			<!-- => 클래스 대신 인터페이스 사용 가능 - 인터페이스를 상속받은 모든 자식클래스를 표현 -->
			<!--  <aop:before method="beforeLog" pointcut="exection(void addStudent(xyz.itwill07.aop.Hewon))"/> -->
		</aop:aspect>
	</aop:config>
</beans>
